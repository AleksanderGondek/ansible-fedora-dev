---
- name: "Remove old versions of docker"
  dnf:
    name:
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-selinux
      - docker-engine-selinux
      - docker-engine
    state: absent

- name: "Remove previous docker-ce installation"
  dnf:
    name: docker-ce
    state: absent
  when: ansible_fedora_docker_purge

- name: "Remove default docker data root"
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/var/lib/docker/"
    - "{{ ansible_fedora_docker_data_root }}"
  when: ansible_fedora_docker_purge

- name: "Ensure fedora GPG key is present on machine"
  copy:
    src: "{{ role_path }}/files/fedora_gpg.key"
    dest: "/tmp/fedora_gpg.key"

- name: "Ensure fedora GPG key is trusted"
  rpm_key:
    key: /tmp/fedora_gpg.key
    state: present

- name: "Ensure docker-ce repositories are added"
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.name }}"
    file: "{{ item.filename }}"
    baseurl: "{{ item.baseurl }}"
    enabled: "{{ item.enabled }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey }}"
  with_items: "{{ ansible_fedora_docker_default_yum_repos + ansible_fedora_docker_yum_repos }}"

- name: "Ensure docker-ce is installed"
  dnf:
    name: "docker-ce"
    state: present

- name: "Ensure /etc/docker/ directory exists"
  file:
    path: /etc/docker
    state: present

- name: "Configure docker daemon"
  template:
    src: "{{ role_path }}/templates/daemon.json.j2"
    dest: /etc/docker/daemon.json

- name: Ensure group "docker" exists
  group:
    name: docker
    gid: "{{ ansible_fedora_docker_gid | default(1001) }}"
    state: present

- name: Add user(s) to "docker" group
  user:
    name: "{{ item }}"
    groups: "docker"
    append: true
  loop: "{{ ansible_fedora_docker_users }}"
  when: "{{ ansible_fedora_docker_users }}"

- name: "Ensure dockerd is enabled and running"
  systemd:
    name: docker
    daemon_reload: true
    state: started
    enabled: true

- name: "Ensure docker compose is installed"
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ ansible_fedora_docker_compose_version }}/docker-compose-Linux-x86_64
    checksum: "{{ ansible_fedora_docker_compose_checksum }}"
    dest: "{{ ansible_fedora_docker_compose_install_path }}"
    force: true
    mode: 0755

- name: "Ensure cron is installed"
  dnf:
    name: cronie
  state: present

- name: "Ensure docker related jobs are defined"
  cron:
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    minute: "{{ item.schedule[0] }}"
    hour: "{{ item.schedule[1] }}"
    day: "{{ item.schedule[2] }}"
    month: "{{ item.schedule[3] }}"
    weekday: "{{ item.schedule[4] }}"
    cron_file: "{{ item.file_name }}"
    user: "{{ item.user }}"
  loop: "{{ ansible_fedora_docker_default_cron_jobs + ansible_fedora_docker_cron_jobs }}"
